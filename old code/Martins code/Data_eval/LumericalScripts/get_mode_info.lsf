switchtolayout;
#cd("C:\Users\am17073\Documents\PhDProjects\Reconfigurable_Hamiltonian\RW_PYTHON_MULTI");
rm("straight_waveguide.lms");
save("straight_waveguide.lms");

#?wi/dth

#wavelength = 1.55e-6;
#N_points_Disp = 21;
#start_wavelength = 1.55e-6;
#stop_wavelength = 1.6e-6;
#d_wavelength = (stop_wavelength-start_wavelength) / (N_points_Disp-1);
#width = 800e-9;
#height = 220e-9;
#Lc = 1e-6;
#top_cladding_thickness = 2e-6;
#bottom_cladding_thickness = 3e-6;
#Mode_resolution = 200;
#mesh_dx = 0.01e-6;
#mesh_dy = 0.01e-6;
#substrate_height = 2e-6;
#num_TE = 3;
#material_wg = "Si (Silicon) - Palik";
#material_clad = "SiO2 (Glass) - Palik";
#freq_sweep = 0;

bnd_metal="metal";
bnd_PML="PML";

#if(mod(N_points_Disp,2)==1){
	#N_points_Disp = N_points_Disp + 1;
#}

sim_setup;
run;

switchtolayout;
select("FDE");
set("number of trial modes",num_TE);
set("wavelength",wavelength - (N_points_Disp - 1) * d_wavelength / 2);

findmodes;
setanalysis("stop wavelength",wavelength + (N_points_Disp - 1) * d_wavelength / 2);
setanalysis("number of points",N_points_Disp);
setanalysis("number of test modes",num_TE);
setanalysis("detailed dispersion calculation",1);
setanalysis("track selected mode",1);

neff=matrix(num_TE,1);
    
is_TE = matrix(num_TE,1);
loss = matrix(num_TE,1);
res = Mode_resolution+1;
if(freq_sweep==1){
neff_f = matrix(num_TE,N_points_Disp);    
vg = matrix(num_TE,N_points_Disp);
}
index_info = getresult("FDE::data::material","index");
size_array = size(getattribute(index_info,"index_x"));
index_profile = matrix(size_array(1),size_array(2),1,1);
x_array = matrix(size_array(1),1);
y_array = matrix(size_array(2),1);
index_profile(1:size_array(1),1:size_array(2),1,1) = getattribute(index_info,"index_x");
Ex = matrix(num_TE,size_array(1),size_array(2),1,1);
Ey = matrix(num_TE,size_array(1),size_array(2),1,1);
x_array(1:size_array(1)) = getdata('mode1','x');
y_array(1:size_array(2)) = getdata('mode1','y');
for(i=1;i<=num_TE;i=i+1){
?"mode"+num2str(i);
selectmode(i);
is_TE(i) = getdata("mode"+num2str(i),"TE polarization fraction");
loss(i) =  getdata("mode"+num2str(i),"loss");

Ex(i,1:size_array(1),1:size_array(2),1,1) =  pinch(getdata("mode"+num2str(i),"Ex"));
Ey(i,1:size_array(1),1:size_array(2),1,1) =  pinch(getdata("mode"+num2str(i),"Ey"));

neff(i) = getdata("mode"+num2str(i),"neff");    

if(freq_sweep==1){

frequencysweep;

neff_f(i,1:N_points_Disp)=getdata("frequencysweep","neff");
vg(i,1:N_points_Disp)=getdata("frequencysweep","vg");
    
}	 
}

